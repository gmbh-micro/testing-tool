##################################################################################
## gmbH Project
##################################################################################

max_services_per_node = 3
include_dashboard = true

##################################################################################
[core]
##################################################################################
# 
mode = "local"
#
# Print coreData to stdout and stdErr? This can be overriden with the --verbose 
# command line flag
verbose = true
#
# For instances where gmbh is running in a container
daemom = false
#
# The address to start the coreData server
address = "localhost:49500" #default is localhost:49500
#
# How long between keep alive messages
keep_alive = "55s"
#
# Path to gmbhCore binary
core_bin = ""   # default is $GOPATH/bin/gmbhCore
                # Note cannot interpolate env vars in TOML

##################################################################################
[procm]
##################################################################################
# What address should the ProcM be started at
address = "localhost:5900" #default is localhost:59500
#
# How long between keep alive messages
keep_alive = "45s"
#
# Print gmbhProcM to stdout and stdErr
verbose = false
#
# Path to gmbhProcm binary
procm_bin = ""  # default is $GOPATH/bin/gmbhProcm
                # Note cannot interpolate env vars in TOML


##################################################################################
# Services # Holds the array of services to launch from the service launcher and
############ start in managed mode.
##################################################################################

    [[service]]
        id = "c0"
        args = [""]
        env = [""]
        language = "go"
        bin_path = "./services/c0/c0"
        src_path = "./services/c0"
        has_makefile = true
        ports = [""]

    [[service]]
        id = "c1"
        args = [""]
        env = [""]
        language = "go"
        bin_path = "./services/c1/c1"
        src_path = "./services/c1"
        has_makefile = true
        ports = [""]

    [[service]]
        id = "c2"
        args = [""]
        env = [""]
        language = "go"
        bin_path = "./services/c2/c2"
        src_path = "./services/c2"
        has_makefile = true
        ports = [""]

    [[service]]
        id = "c3"
        args = [""]
        env = [""]
        language = "go"
        bin_path = "./services/c3/c3"
        src_path = "./services/c3"
        has_makefile = true
        ports = [""]

    [[service]]
        id = "c4"
        args = [""]
        env = [""]
        language = "go"
        bin_path = "./services/c4/c4"
        src_path = "./services/c4"
        has_makefile = true
        ports = [""]

    [[service]]
        id = "ws"
        args = [""]
        env = [""]
        language = "go"
        bin_path = "./services/webserver/ws"
        src_path = "./services/webserver"
        has_makefile = true
        ports = ["2020"]
